#!/usr/bin/env python3

import sys, os, subprocess
err = "An error has occurred\n";

def MyPrompt():
    while True:
        command = input('mysh$ ')
        result = execute_commands(command)
        if result == "continue":
            continue
        if result == "break":
            break

def execute_commands(command):
    command = ' '.join(command.split())
    if command == "exit":
        return "break"
    elif command == "":
        return "continue"
    elif command == "help":
        print("mysh: a simple shell written in Python")
    
    elif command[:2] == "cd ":
        psh_cd(command[2:])
    elif ">" in command:
        lcommands = command.split(">")
        file = lcommands[1][1:]
        if file != "":
            path = os.path.abspath(file)

            stdout = open(path, "w")
            command = lcommands[0]    
    else:
        command = which(command)
        stdout = sys.stdout

        try:
            # Popen
            proc = subprocess.Popen(command.split(), stdout=stdout, stderr=sys.stderr, stdin=subprocess.PIPE)
            proc.wait()
            #stdout.flush()
            proc.communicate()
        except Exception:
            print(err, file=sys.stderr)


def which(program):
    def is_exe(fpath):
        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

    fpath, fname = os.path.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            exe_file = os.path.join(path, program)
            if is_exe(exe_file):
                return exe_file
    return program

def psh_cd(path):
    """convert to absolute path and change directory"""
    if path == "":
        os.chdir(os.getenv('HOME'))
    try:
        os.chdir(os.path.realpath(path))
    except Exception:
        print(err, file=sys.stderr)

if __name__ == '__main__':
    #test character de merde, mauvaise commande
    #mettre tjrs meme msg erreur
    #Read and Less

    #> override the output

    #if command not in Path, go in path 

    arg = sys.argv
    if len(sys.argv) == 1:
        MyPrompt()
    elif len(sys.argv) == 2:
        file1 = open(sys.argv[1], 'r')
        Lines = file1.readlines()
        for line in Lines:
            print(line[:-1])
            execute_commands(line)
    else:
        print(err, file=sys.stderr)